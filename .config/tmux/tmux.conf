# General config {{{
# Fix nvim crashes in st (https://github.com/tmux/tmux/issues/1264)
set-option -as terminal-overrides ',st*:Ss@'
# Allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-option -g default-shell /bin/zsh
set-option -g default-command /bin/zsh
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g history-limit 10000

# start with window 1 and pane 1 (instead of 0)
set-option -g base-index 1
set-option -g pane-base-index 1

#set-option -g status-utf8 on
#set-option -g utf8 one

# http://man7.org/linux/man-pages/man1/tmux.1.html
set-option -g status-bg black
set-option -g status-fg cyan
set-option -g status-left-length 85
set-option -g status-left '» #[fg=yellow,bold]#(printf ${USER})#[fg=green]@#[fg=red]#T#[default]#[fg=white]:#[fg=blue]#{pane_current_path}'
set-option -g status-right '#[fg=red,bold]#(git -C #{pane_current_path} branch)#[default] #[fg=blue]###S #[fg=magenta]%d/%m#(acpi | cut -d ',' -f 2) #[fg=magenta,bold]%R#[default]'

# Enable activity alerts
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Automatically window title
#set-window-option -g automatic-rename on
#set-option -g set-titles on
#set-option -g set-titles-string '#H:#S.#I.#P #W #T'
#set-option allow-rename off

set-option -g pane-border-format "#{pane_index}-#{pane_current_command}"

set-window-option -g mouse off

set-window-option -g window-status-current-style fg=white
set-window-option -g window-status-current-style reverse

# No delay for escape key press
set-option -sg escape-time 1

# loud or quiet?
#set -g visual-activity off
#set -g visual-bell off
#set -g visual-silence off
#setw -g monitor-activity off
#set -g bell-action none

#select-pane -t:.1 -P 'bg=default' # set colour of pane 1
#select-pane -P 'bg=#2B2B2B'
set-option -g window-status-style 'bg=black fg=white'
set-option -g window-status-activity-style 'bg=green fg=black'
set-option -g window-status-current-style 'bg=#306998 fg=white'
set-option -g pane-border-style 'bg=default fg=#4B4B4B'
set-option -g pane-active-border-style 'bg=#2a2d36 fg=#58a6ff'
set-option -g status-position bottom
set-option -g status-justify centre
set-option -g status-interval 5
#set-window-option -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
set-option -g message-style 'bg=default fg=green bright'
#set-window-option -g clock-mode-colour colour24
#set-window-option -g mode-style 'fg=colour11 bg=colour11 bold' # what

# https://superuser.com/questions/238702/maximizing-a-pane-in-tmux
# https://unix.stackexchange.com/questions/533709/show-tmux-pane-status-only-when-there-is-more-than-one-pane-in-window
# https://stackoverflow.com/questions/12343982/how-can-i-bind-a-key-to-switch-to-last-pane-or-if-there-are-no-panes-last-wind
# https://gist.github.com/knmkr/4441196
#is_many="if [ #{window_panes} -eq 1 ]; then exit 1; fi"
#set-hook -g window-layout-changed 'if-shell "$is_many" "set-option -w pane-border-status bottom" "set-option -w pane-border-status off"'

#set-hook -g window-layout-changed 'set-window -F pane-border-status "#{?#{==:#{window_panes},1},off,top}"'

#set-hook -g window-layout-changed 'if-shell -F "#{!=:#{window_panes},1}" "set-option -w pane-border-status top" ; if-shell -F "#{==:#{window_panes},1}" "set-option -w pane-border-status off"'

set-option -g window-style 'bg=default'
set-option -g window-active-style 'bg=default'
#set-option -g window-active-style 'bg=#2a2d36'
set-hook -g window-layout-changed 'if-shell -F "#{!=:#{window_panes},1}" "set-option -g window-active-style bg=default; set-option -w pane-border-status top" ; if-shell -F "#{==:#{window_panes},1}" "set-option -g window-active-style bg=default; set-option -w pane-border-status off"'
# }}}

# Keybindings {{{
# http://stahlke.org/dan/tmux-nested/
# https://superuser.com/questions/1438594/how-to-escape-quotes-semicolons-in-tmux-bind-key
# Unbind all keys
unbind-key -a
# Rebind some defaults {{{
bind-key Space next-layout
bind-key ! break-pane
bind-key '#' list-buffers
bind-key '$' command-prompt "rename-session '%%'"
bind-key ',' command-prompt "rename-window '%%'"
bind-key '-' delete-buffer
bind-key '.' command-prompt "move-window -t '%%'"
bind-key 0 select-window -t :0
bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9
bind-key ':' command-prompt
bind-key '?' list-keys
bind-key D choose-client
bind-key L switch-client -l
bind-key d detach-client
bind-key f command-prompt "find-window '%%'"
bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
# }}}

#set-window-option -g mode-keys vi
#set-option -g status-keys vi
set-window-option -g xterm-keys on # for vim

# Change prefix from C-b to C-a
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix

bind-key r source-file ~/.config/tmux/tmux.conf \; display 'reloaded ~/.tmux.conf'

# Add all keybindings that do not require a leader/prefix in here
# Disable session binds
bind -n C-up \
  set -qg status-bg colour25 \; \
  unbind-key -n S-Left \; \
  unbind-key -n S-Down \; \
  unbind-key -n S-Up \; \
  unbind-key -n S-Right \; \
  unbind-key -n S-M-Left \; \
  unbind-key -n S-M-Down \; \
  unbind-key -n S-M-Up \; \
  unbind-key -n S-M-Right \; \
  unbind-key -n C-PageDown  \; \
  unbind-key -n C-PageUp \; \
  set-option -qg prefix C-f
# Enable session binds
bind -n C-down \
  set -qg status-bg black \; \
  bind-key -n S-Left select-pane -L \; \
  bind-key -n S-Down select-pane -D \; \
  bind-key -n S-Up select-pane -U \; \
  bind-key -n S-Right select-pane -R \; \
  bind-key -nr S-M-Left resize-pane -L 1 \; \
  bind-key -nr S-M-Down resize-pane -D 1 \; \
  bind-key -nr S-M-Up resize-pane -U 1 \; \
  bind-key -nr S-M-Right resize-pane -R 1 \; \
  bind-key -n C-PageDown  previous-window \; \
  bind-key -n C-PageUp next-window \; \
  set-option -qg prefix C-a

#bind -n C-t new-window -a
#bind -n S-left  prev
#bind -n S-right next
#bind -n S-C-left  swap-window -t -1
#bind -n S-C-right swap-window -t +1

# Switching panes
bind-key -n S-Left select-pane -L
bind-key -n S-Down select-pane -D
bind-key -n S-Up select-pane -U
bind-key -n S-Right select-pane -R

# Resizing panes
bind-key -nr S-M-Left resize-pane -L 5
bind-key -nr S-M-Down resize-pane -D 5
bind-key -nr S-M-Up resize-pane -U 5
bind-key -nr S-M-Right resize-pane -R 5

# Switching windows
bind-key -n C-PageDown  previous-window
bind-key -n C-PageUp next-window

bind-key Enter if-shell "[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]" "splitw -v -c '#{pane_current_path}'" "splitw -h -c '#{pane_current_path}' "
bind-key Space run-shell 'bash -c "tmux swap-pane -t \$(tmux list-panes -F \"##P 8*##{pane_width}*20*##{pane_height}\" | while read l; do t=( \$l );echo \"\${t[0]} \$((\${t[1]}))\";done | sort -k 2 -r -g | cut -d\" \" -f1 | head -n 1)"'

# New window
#bind-key Enter new-window -c '#{pane_current_path}'
bind-key n new-window
bind-key | split-window -h -c '#{pane_current_path}'
bind-key '-' split-window -v -c '#{pane_current_path}'
bind-key o rotate-window
# }}}

# GitHub Dark Default {{{
# set -g mode-style               "fg=#c9d1d9,bg=#c5c5c5"
# set -g message-style            "fg=#c9d1d9,bg=#c5c5c5"
# set -g message-command-style    "fg=#c9d1d9,bg=#c5c5c5"
# set -g pane-border-style        "fg=#b3b1ad"

# set -g status "on"
# set -g status-justify "left"

# set -g status-style "fg=#58a6ff,bg=#090c10"

# set -g status-left-length "100"
# set -g status-right-length "100"

# set -g status-left-style NONE
# set -g status-right-style NONE

# set -g status-left "#[fg=#090c10,bg=#58a6ff,bold] #S #[fg=#58a6ff,bg=#090c10,nobold,nounderscore,noitalics]"
# set -g status-right "#[fg=#090c10,bg=#090c10,nobold,nounderscore,noitalics]#[fg=#090c10,bg=#090c10] #{prefix_highlight} #[fg=#c5c5c5,bg=#090c10,nobold,nounderscore,noitalics]#[fg=#484f58,bg=#c5c5c5] %Y-%m-%d  %I:%M %p #[fg=#58a6ff,bg=#c5c5c5,nobold,nounderscore,noitalics]#[fg=#090c10,bg=#58a6ff,bold] #h "

# setw -g window-status-activity-style "underscore,fg=#b3b1ad,bg=#090c10"
# setw -g window-status-separator ""
# setw -g window-status-style "NONE,fg=#0d1117,bg=#090c10"
# setw -g window-status-format "#[fg=#090c10,bg=#090c10,nobold,nounderscore,noitalics]#[fg=#4d5566,bg=#090c10,nobold,nounderscore,noitalics] #I  #W #F #[fg=#090c10,bg=#090c10,nobold,nounderscore,noitalics]"
# setw -g window-status-current-format "#[fg=#090c10,bg=#c5c5c5,nobold,nounderscore,noitalics]#[fg=#484f58,bg=#c5c5c5,bold] #I  #W #F #[fg=#c5c5c5,bg=#090c10,nobold,nounderscore,noitalics]"
# }}}

# Ayu Dark {{{
fg="#CBCCC6"
bg="#212732"
status_bg="#34455A"
border_fg="#70748C"
border_active_fg="#FECB6E"
status_left_bg="#FFA759"

set -g status-style "bg=$status_bg,fg=$fg"
# set -g status-left-style "bg=$status_left_bg,fg=$fg"

# Border
set -g pane-border-style "bg=$bg,fg=$border_fg"
set -g pane-active-border-style "bg=$bg,fg=$border_active_fg"

# Window
set -g window-status-current-style "fg=$border_active_fg"
set -g window-status-style "fg=$fg"
# }}}

# Plugins {{{
set -g @plugin 'laktak/extrakto'
set -g @plugin 'jaclu/tmux-mouse-swipe'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sensible' # {{{
# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux messages are displayed for 4 seconds
set -g display-time 2000

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
# }}}
set -g @plugin 'jaclu/tmux-menus' # {{{
  set -g @menus_trigger 'm'
  set -g @menus_location_x 'C'
  set -g @menus_location_y 'C'
# }}}
set -g @plugin 'sainnhe/tmux-fzf'

bind C-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/'

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'mkdir -p ~/.config/tmux/plugins && git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

bind-key P run '~/.config/tmux/plugins/tpm/bin/install_plugins'

run '~/.config/tmux/plugins/tpm/tpm'
# }}}
