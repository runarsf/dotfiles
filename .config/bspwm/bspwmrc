#!/usr/bin/env bash
# vim: set foldmethod=marker foldlevel=0 nomodeline:

# Loop through all monitors and change name
#i=1
#for monitor in $(bspc query -M); do
#  bspc monitor "${monitor}" --rename "${i}"
#  let i++
#done

# General config {{{
bspc config split_ratio 0.52
bspc config borderless_monocle true
bspc config gapless_monocle true
bspc config automatic_scheme alternate
bspc config initial_polarity second_child
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resuze_corner
bspc config click_to_focus any

bspc config focus_follows_pointer true
bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true
bspc config merge_overlapping_monitors true

#bspc config normal_border_color "#2e2e2e"
#bspc config active_border_color "#2e2e2e"
#bspc config focused_border_color "#306998"
#bspc config presel_feedback_color "#5e81ac"
#bspc config urgent_border_color "#dd2727"
bspc config normal_border_color  "#13141d"
bspc config active_border_color  "#13141d"
bspc config focused_border_color "#13141d"

bspc config top_padding 0
bspc config bottom_padding 0
bspc config left_padding 0
bspc config right_padding 0
bspc config border_width 3
bspc config window_gap 25

#xsetroot -cursor_name left_ptr
# }}}

# Rules {{{
bspc rule -r "*"
bspc rule -a discord desktop=^2
bspc rule -a Mattermost desktop=^2
bspc rule -a slack desktop=^2
bspc rule -a Steam desktop=^5
bspc rule -a org.remmina.Remmina desktop=^5
bspc rule -a Anki desktop=^9
bspc rule -a Insync desktop=^0
bspc rule -a Screenkey manage=off
bspc rule -a Pavucontrol floating=on
bspc rule -a mpv floating=on
bspc rule -a keepass2 floating=on
bspc rule -a sun-awt-X11-XFramePeer floating=on
bspc rule -a org-geogebra-desktop-GeoGebra3D floating=on
bspc rule -a Zathura state=tiled
bspc rule -a '*:scratchpad' sticky=on state=floating center=true rectangle=1600x1000+0+0

#on=14 off=0
#bspc query -N -n .floating.window | xargs -I {node} bspc config -n {node} border_width "$on"
#bspc query -N -n .!floating.window | xargs -I {node} bspc config -n {node} border_width "$off"
#while read -r _ _ _ node state status; do
#    [[ "$state" == "floating" ]] && bspc config -n "$node" border_width "${!status}"
#done < <(bspc subscribe node_state)
# }}}

exec_once () { # {{{
  # Note: Most programs are started in .xprofile
  cmd="${1}" # $1: command to run
  pid="${2:-${cmd%% *}}" # $2: what to check the pid of, defaults to first word of $1
  if ! pgrep -f "${pid}" >/dev/null 2>&1; then
    if command -v "${cmd}" >/dev/null 2>&1; then
      eval "${cmd} &"
    fi
  fi
}

#feh --bg-tile "${HOME}/.config/wall.png" &
dunst --config "${XDG_CONFIG_HOME:-${HOME}/.config}/dunst/dunstrc" &
picom --config "${XDG_CONFIG_HOME:-${HOME}/.config}/picom/picom.conf" -fcCGb --xrender-sync-fence &
"${HOME}/.config/polybar/launch.sh" main &
"${HOME}/.config/bspwm/cleanfullscreen" &
"${HOME}/.config/bspwm/monitors.py" &
#pkill -USR1 picom
killall -q sxhkd; sxhkd -m 1 -c "${HOME}/.config/sxhkd/sxhkdrc" "${HOME}/.config/bspwm/sxhkdrc" &
# pgrep -x sxhkd > /dev/null || sxhkd &
#killall -q 2bspwm; 2bspwm &
# }}}
