#!/usr/bin/env bash

action=${1}
arg=${2}

function usage {
  echo "  $(basename ${0})"
  echo "    Sort columns based on tags."
  echo ""
  exit
}

test "${action}" = "usage" && usage

cd "${TODO_DIR}"

# TODO: Sort with fzf (prj / ctx / all)

colours () { # {{{
  RESET=$'\e[0;39m'

  E_BOLD=$'\e[1m'
  E_DIM=$'\e[2m'
  E_UNDERLINE=$'\e[4m'
  E_BLINK=$'\e[5m'
  E_INVERT=$'\e[7m'
  E_HIDDEN=$'\e[8m'

  R_NORMAL=$'\e[0m'
  R_BOLD=$'\e[21m'
  R_DIM=$'\e[22m'
  R_UNDERLINE=$'\e[24m'
  R_BLINK=$'\e[25m'
  R_INVERT=$'\e[27m'
  R_HIDDEN=$'\e[28m'

  F_DEFAULT=$'\e[19m'
  F_BLACK=$'\e[30m'
  F_RED=$'\e[31m'
  F_GREEN=$'\e[32m'
  F_YELLOW=$'\e[33m'
  F_BLUE=$'\e[34m'
  F_MAGENTA=$'\e[35m'
  F_CYAN=$'\e[36m'
  F_LGRAY=$'\e[37m'
  F_DGRAY=$'\e[90m'
  F_LRED=$'\e[91m'
  F_LGREEN=$'\e[92m'
  F_LYELLOW=$'\e[93m'
  F_LBLUE=$'\e[94m'
  F_LMAGENTA=$'\e[95m'
  F_LCYAN=$'\e[96m'
  F_WHITE=$'\e[97m'

  B_DEFAULT=$'\e[49m'
  B_BLACK=$'\e[40m'
  B_RED=$'\e[41m'
  B_GREEN=$'\e[42m'
  B_YELLOW=$'\e[43m'
  B_BLUE=$'\e[44m'
  B_MAGENTA=$'\e[45m'
  B_CYAN=$'\e[46m'
  B_LGRAY=$'\e[47m'
  B_DGRAY=$'\e[100m'
  B_LRED=$'\e[101m'
  B_LGREEN=$'\e[102m'
  B_LYELLOW=$'\e[103m'
  B_LBLUE=$'\e[104m'
  B_LMAGENTA=$'\e[105m'
  B_LCYAN=$'\e[106m'
  B_WHITE=$'\e[106m'
}
colours
# }}}

# > Get all tasks containing +
# > Remove the last two lines
# > Remove color codes
# > Get *only* all words starting with +
# > Sort
# > Remove duplicate words
if test "${arg}" = "prj" -o -z "${arg}"; then
  projects=$(${TODO_SH} ls "+" \
           | head -n -2 \
           | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" \
           | \grep --color=never -oE '\+\S+' \
           | sort \
           | uniq)

  # https://www.mclean.net.nz/ucf/
  # https://unicodelookup.com/#block/1

  for proj in ${projects}; do
    printf "${proj}\n"
    seq -s= $((${#proj}+1)) | tr -d '[:digit:]' # '=' * proj + 1
    ${TODO_SH} ls "${proj}" \
      | head -n -2
      #| sed -E "s/\([A-Z]\)/ ${B_RED}${F_WHITE} A ${RESET}/"
    printf "\n"
  done
fi

if test "${arg}" = "ctx" -o -z "${arg}"; then
  contexts=$(${TODO_SH} ls "@" \
           | head -n -2 \
           | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" \
           | \grep --color=never -oE '\@\S+' \
           | sort \
           | uniq)

  for ctx in ${contexts}; do
    printf "${ctx}\n"
    seq -s= $((${#ctx}+1)) | tr -d '[:digit:]' # '=' * proj + 1
    ${TODO_SH} ls "${ctx}" | head -n -2
    printf "\n"
  done
fi

if test "${arg}" = "pri" -o -z "${arg}"; then
  priorities=$(${TODO_SH} ls "(*)" \
             | head -n -2 \
             | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" \
             | \grep --color=never -oE '\([A-Z]\)' \
             | sort \
             | uniq)

  for pri in ${priorities}; do
    printf "${B_RED} ${RESET} ${B_RED}${F_WHITE} ${pri} ${RESET}\n" | sed -E 's/\(//' | sed -E 's/\)//'
    #seq -s= $((${#pri}+1)) | tr -d '[:digit:]' # '=' * proj + 1
    ${TODO_SH} ls "${pri}" | head -n -2
    printf "\n"
  done
fi

if test -z "${arg}"; then
  uncategorized="$(${TODO_SH} ls -"+" | head -n -2)"
  if test -n "${uncategorized}"; then
    printf "Uncategorized\n=============\n"
    printf "${uncategorized}"
  fi
fi

#printf ${projects} | grep -w -v -e "+wifi" -e "+unifi"
