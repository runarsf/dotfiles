import os

$XONSH_COLOR_STYLE="monokai"

$FOREIGN_ALIASES_SUPPRESS_SKIP_MESSAGE=True

$PROMPT_TOOLKIT_COLOR_DEPTH='DEPTH_24_BIT'
$XONSH_SHOW_TRACEBACK=False
$COMPLETIONS_DISPLAY='single'
$HISTCONTROL='ignoredups,erasedups'
$ENABLE_ASYNC_PROMPT=True
$VC_BRANCH_TIMEOUT=.2
$NPM_PACKAGES=$HOME+'/.npm'
$PYENV_ROOT=$HOME+"/.pyenv"


#$AUTO_CD = True
#$AUTO_PUSHD = True
#$BASH_COMPLETIONS = '/usr/local/bin/bash-completion/'
#$CASE_SENSITIVE_COMPLETIONS = False
#$DYNAMIC_CWD_ELISION_CHAR = 'â€¦'
#$AUTO_SUGGEST = True
#$AUTO_SUGGEST_IN_COMPLETIONS = True
#$COMPLETIONS_CONFIRM = True
#$XONSH_AUTOPAIR = True
#$XONSH_SHOW_TRACEBACK = True

$XONSH_HISTORY_SIZE = (1073741824, "commands")
$GOPATH = $HOME + '/go/bin'

$EDITOR = 'nvim'

aliases['-'] = ['cd', '-']
aliases['ls'] = ['ls', '-l', '-A', '-F', '-h']
if $(ls --version 2>/dev/null).strip():
    aliases['ls'].append('--color=auto')
aliases['grep'] = 'grep --color'
aliases['c'] = 'xclip -selection clipboard'
aliases['vim'] = $EDITOR

# source-bash --overwrite-aliases --interactive True --sourcer source "echo loading xonsh foreign shell"

# only add paths that aren't already in PATH
# use reverse since we're prepending
for p in reversed([
        $HOME + "/.local/bin",
        $HOME + "/.cargo/bin",
        $GOPATH[0] + "/bin",
        $NPM_PACKAGES + "/bin",
        $PYENV_ROOT + "/bin"
        "/opt/X11/bin",
        "/usr/local/bin",
        "/usr/local/sbin",
    ]):
    if p not in $PATH:
        $PATH.insert(0, p)

if (os.path.isfile('/usr/bin/security') and
    !(ssh-add -lq a> /dev/null).returncode == 1):
    ssh-add -K

def _x11docker(args, stdin=None, stdout=None, stderr=None):
    xhost +
    docker run -e DISPLAY=host.docker.internal:0 @(args)
    xhost -
    return 0

aliases['x11docker'] = _x11docker

$BASH_COMPLETIONS.insert(0, '/usr/local/share/bash-completion/bash_completion')

xontrib load z coreutils distributed docker_tabcomplete mpl apt_tabcomplete
xontrib load vox prompt_ret_code vox_tabcomplete fzf-widgets # xontrib-z
#xontrib load avox
#$fzf_history_binding = "c-r"
#$FZF_DEFAULT_COMMAND="fd --type file --color=always --follow --hidden --exclude .git --exclude .hg"
#$FZF_DEFAULT_OPTS="--color 'bg:0,bg+:2,fg:8,fg+:15,hl:10,hl+:11,prompt:11,info:3,marker:11,pointer:11,spinner:1' --ansi --height 10"

# sudo askpass for non SSH sessions
#if 'SSH_CLIENT' not in ${...}:
#  aliases['sudo'] = 'sudo -A'
#  $SUDO_ASKPASS = '/home/dyuri/bin/askpass-rofi'
#  $SSH_ASKPASS = '/home/dyuri/bin/askpass-rofi'

# json
try:
    import __builtin__
except ImportError:
    import builtins as __builtin__
__builtin__.true = True
__builtin__.false = False
__builtin__.null = None

