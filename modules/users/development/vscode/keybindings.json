// Place your key bindings in this file to override the defaultsauto[]
// https://code.visualstudio.com/docs/getstarted/keybindings#_advanced-customization
[
{ "key": "ctrl+[Comma]",              "command": "workbench.action.openSettingsJson" },
{ "key": "ctrl+shift+[Comma]",        "command": "workbench.action.openRawDefaultSettings" },
{ "key": "ctrl+shift+alt+[Comma]",    "command": "workbench.action.openSettings2" },

{ "key": "ctrl+[Period]",             "command": "workbench.action.openGlobalKeybindingsFile" },
{ "key": "ctrl+shift+[Period]",       "command": "workbench.action.openDefaultKeybindingsFile" },
{ "key": "ctrl+shift+alt+[Period]",   "command": "workbench.action.openGlobalKeybindings" },

//{ "key": "ctrl+shift+enter",          "command": "workbench.action.toggleEditorVisibility" },
{ "key": "ctrl+shift+enter",          "command": "workbench.action.terminal.focus"},
{ "key": "ctrl+shift+enter",          "command": "workbench.action.focusActiveEditorGroup",
                                         "when": "terminalFocus" },

{ "key": "ctrl+shift+n",              "command": "multiCommand.makeRoom",
                                         "when": "sideBarVisible && editorTextFocus" },
{ "key": "ctrl+shift+n",              "command": "multiCommand.restore",
                                         "when": "!sideBarVisible" },

{ "key": "alt+z",                     "command": "workbench.action.toggleZenMode",
                                         "when": "editorTextFocus" },
{ "key": "alt+z",                     "command": "-editor.action.toggleWordWrap" },

{ "key": "alt+c",                     "command": "editor.action.blockComment",
                                         "when": "editorTextFocus && !editorReadonly && editorHasSelection" },
{ "key": "alt+c",                     "command": "editor.action.commentLine",
                                         "when": "editorTextFocus && !editorReadonly && !editorHasSelection" },
{ "key": "alt+shift+c",               "command": "editor.action.commentLine",
                                         "when": "editorTextFocus && !editorReadonly" },
//{ "key": "alt+c",                     "command": "-toggleFindCaseSensitive" },


//{ "key": "shift+enter",               "command": "extension.jumpy-word",
//                                         "when": "editorTextFocus" },
//{ "key": "alt+s",                     "command": "extension.jumpy-word",
//                                         "when": "editorTextFocus" },
//{ "key": "Escape",                    "command": "extension.jumpy-exit",
//                                         "when": "editorTextFocus && 

{ "key": "alt+shift+n",               "command": "vscodeMarkdownNotes.newNote" },

// { "key": "shift+alt+down",            "command": "cursorColumnSelectDown",
//                                          "when": "editorTextFocus" },
// { "key": "shift+alt+left",            "command": "cursorColumnSelectLeft",
//                                          "when": "editorTextFocus" },
// { "key": "shift+alt+pagedown",        "command": "cursorColumnSelectPageDown",
//                                          "when": "editorTextFocus" },
// { "key": "shift+alt+pageup",          "command": "cursorColumnSelectPageUp",
//                                          "when": "editorTextFocus" },
// { "key": "shift+alt+right",           "command": "cursorColumnSelectRight",
//                                          "when": "editorTextFocus" },
// { "key": "shift+alt+up",              "command": "cursorColumnSelectUp",
//                                          "when": "editorTextFocus" },

{
  "key": "shift+alt+down",
  "command": "editor.action.insertCursorBelow",
  "when": "textInputFocus",
  "args": { "logicalLine": true },
},
{
  "key": "shift+alt+up",
  "command": "editor.action.insertCursorAbove",
  "when": "textInputFocus",
  "args": { "logicalLine": true },
},


{ "key": "ctrl+down",                 "command": "editor.action.moveLinesDownAction",
                                         "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+up",                   "command": "editor.action.moveLinesUpAction",
                                         "when": "editorTextFocus && !editorReadonly" },

{
  "command": "runCommands",
  "key": "alt+n",
  "args": {
    "commands": [
      "workbench.action.toggleMaximizedPanel",
      "workbench.action.terminal.focus",
    ]
  },
  "when": "!terminalFocus",
},
{
  "command": "runCommands",
  "key": "alt+n",
  "args": {
    "commands": [
      "workbench.action.toggleMaximizedPanel",
      "workbench.action.focusActiveEditorGroup",
    ]
  },
  "when": "terminalFocus",
},

{ "key": "f11",                       "command": "workbench.action.togglePanel" },
{ "key": "f10",                       "command": "workbench.action.toggleFullScreen" },
{ "key": "ctrl+t",                    "command": "workbench.action.files.newUntitledFile" },
// { "key": "ctrl+n",                    "command": "-workbench.action.files.newUntitledFile" },
{ "key": "ctrl+d",                    "command": "editor.action.copyLinesDownAction",
                                         "when": "editorTextFocus" },
{ "key": "ctrl+shift+f",              "command": "workbench.action.findInFiles" },
{ "key": "ctrl+f",                    "command": "-workbench.action.terminal.focusFindWidget",
                                         "when": "terminalFocus" },
{ "key": "ctrl+alt+w",                "command": "editor.action.toggleWordWrap" },
{ "key": ".",                         "command": "" },
{ "key": "alt+b",                     "command": "bookmarks.toggle",
                                         "when": "editorTextFocus" },
{ "key": "f5",                        "command": "workbench.action.debug.run",
                                         "when": "debuggersAvailable && debugState != 'initializing'" },
{ "key": "ctrl+f5",                   "command": "workbench.action.debug.start",
                                         "when": "debuggersAvailable && debugState == 'inactive'" },
{ "key": "ctrl+'",                    "command": "docsView.documentationView.pin" },
{ "key": "ctrl+shift+'",              "command": "docsView.documentationView.unpin" },
{ "key": "cmd+s",                     "command": "searchEditorApplyChanges.apply",
                                         "when": "inSearchEditor" },
{ "key": "ctrl+z",                    "command": "undo",
                                         "when": "editorFocus" },
{ "key": "ctrl+z",                    "command": "-undo" },
// https://github.com/yzhang-gh/vscode-markdown/issues/1011#issue-996151712
/* { "key": "tab",                       "command": "markdown.extension.onTabKey",
                                         "when": "editorTextFocus && !inlineSuggestionVisible && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"}, */
{ "key": "tab",                       "command": "-markdown.extension.onTabKey",
                                         "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'" },
{ "key": "f12",                       "command": "workbench.action.terminal.focus"},
{ "key": "f12",                       "command": "workbench.action.focusActiveEditorGroup",
                                         "when": "terminalFocus" },
{
  "key": "alt+v",
  "command": "workbench.action.terminal.paste",
  "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
/* {
   "key": "alt+c",
   "command": "workbench.action.terminal.copySelection",
   "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
}, */
{
  "key": "alt+r",
  "command": "python.execInTerminal-icon"
},
{
  "key": "alt+r",
  "command": "ahk++.run",
  "when": "editorLangId == 'ahk'"
},
{
  "key": "ctrl+f9",
  "command": "-ahk++.run",
  "when": "editorLangId == 'ahk'"
},
{
  "key": "ctrl+f",
  "command": "-list.find",
  "when": "listFocus && listSupportsFind"
},
/* {
  "key": "ctrl+enter",
  "command": "Maximize Terminal",
  "when": "!panelMaximized"
},
{
  "key": "ctrl+enter",
  "command": "Restore Terminal",
  "when": "terminalFocus"
}, */
{
  "key": "ctrl+alt+t",
  "command": "Restore Terminal",
  // "when": "terminalFocus"
},
{
  "key": "ctrl+alt+t",
  "command": "Maximize Terminal",
  "when": "!terminalFocus"
},
{
  "key": "ctrl+shift+l",
  "command": "editor.action.selectToBracket"
},
/* {
  "key": "alt+n",
  "command": "workbench.action.terminal.focus"
},
{
  "key": "alt+n",
  "command": "workbench.action.focusActiveEditorGroup",
  "when": "terminalFocus"
}, */
{
  "key": "shift+alt+enter",
  "command": "workbench.files.action.showActiveFileInExplorer"
},
{
  "key": "ctrl+o",
  "command": "-workbench.action.files.openLocalFile",
  "when": "remoteFileDialogVisible"
},
{
  "key": "ctrl+o",
  "command": "-workbench.action.files.openFileFolder",
  "when": "isMacNative && openFolderWorkspaceSupport"
},
{
  "key": "ctrl+o",
  "command": "-workbench.action.files.openFolderViaWorkspace",
  "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
},
{
  "key": "ctrl+o",
  "command": "-workbench.action.files.openFile",
  "when": "true"
},
{
  "key": "shift+alt+f5",
  "command": "-workbench.action.editor.previousChange",
  "when": "editorTextFocus && !textCompareEditorActive"
},
{
  "key": "ctrl+o",
  "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
},
{
  "key": "ctrl+alt+h",
  "command": "-rest-client.history"
},
{
  "key": "ctrl+alt+left",
  "command": "-footsteps.skipBack"
},
{
  "key": "ctrl+alt+right",
  "command": "-footsteps.skipForwards"
},
{
  "key": "ctrl+alt+left",
  "command": "footsteps.skipBack"
},
{
  "key": "ctrl+alt+right",
  "command": "footsteps.skipForwards"
},
{
  "key": "ctrl+alt+up",
  "command": "footsteps.skipForwardsSameFile"
},
{
  "key": "ctrl+alt+down",
  "command": "footsteps.skipBackSameFile"
},
{
  "key": "shift+right",
  "command": "workbench.action.terminal.focusNextPane",
  "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
  "key": "alt+down",
  "command": "-workbench.action.terminal.focusNextPane",
  "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
  "key": "shift+left",
  "command": "workbench.action.terminal.focusPreviousPane",
  "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
  "key": "alt+left",
  "command": "-workbench.action.terminal.focusPreviousPane",
  "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
  "key": "alt+right",
  "command": "-workbench.action.terminal.focusNextPane",
  "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
  "key": "ctrl+k ctrl+d",
  "command": "-editor.action.moveSelectionToNextFindMatch",
  "when": "editorFocus"
},
{
  "key": "ctrl+k ctrl+d",
  "command": "editor.action.peekDefinition",
  "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
},
{
  "key": "ctrl+shift+f10",
  "command": "-editor.action.peekDefinition",
  "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
},
{
  "key": "ctrl+k ctrl+r",
  "command": "-git.revertSelectedRanges",
  "when": "isInDiffEditor && !operationInProgress"
},
{
  "key": "ctrl+k ctrl+r",
  "command": "-workbench.action.keybindingsReference"
},
{
  "key": "ctrl+k ctrl+r",
  "command": "editor.action.referenceSearch.trigger"
},
{
  "key": "ctrl+k ctrl+k",
  "command": "-editor.action.selectFromAnchorToCursor",
  "when": "editorTextFocus && selectionAnchorSet"
},
{
  "key": "ctrl+k ctrl+k",
  "command": "-editor.action.defineKeybinding",
  "when": "resource == 'vscode-userdata:/home/runar/.config/Code/User/keybindings.json'"
},
{
  "key": "ctrl+k ctrl+k",
  "command": "editor.action.quickFix",
  "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
},
{
  "key": "ctrl+[Period]",
  "command": "-editor.action.quickFix",
  "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
}
]