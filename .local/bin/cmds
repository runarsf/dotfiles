#!/usr/bin/env bash
set -o errexit
#set -o xtrace

# Get list of commands
if test -n "${COMMANDS_FILE}" -a -f "${COMMANDS_FILE}"; then
  ctype="environment"
  cfile="${COMMANDS_FILE}"
  #commands="$(cat ${COMMANDS_FILE})"
elif test -f 'commands'; then
  ctype="local"
  cfile="./commands"
  #commands="$(cat commands)"
elif (test -d '.git' || git rev-parse --is-inside-work-tree > /dev/null 2>&1) \
 && test -f "$(find -L -type f -name 'commands' 2> >(grep -v 'Permission denied' >&2))"; then
  ctype="local git"
  cfile="$(printf $(find -L -type f -name 'commands' 2> >(grep -v 'Permission denied' >&2)))"
  #commands="$(cat $(find -L -type f -name 'commands' 2> >(grep -v 'Permission denied' >&2)))"
elif test -f "${HOME}"/.config/commands; then
  ctype="global"
  cfile="${HOME}/.config/commands"
  #commands="$(cat ${HOME}/.config/commands)"
elif test -f "${HOME}"/.commands; then
  ctype="global"
  cfile="${HOME}/.commands"
  #commands="$(cat ${HOME}/.commands)"
else
  printf "No 'commands' file found.\n"
  exit 1
fi

default_commands=": Edit ${ctype} commands file. ; ${EDITOR:-vim} ${cfile}\n"
commands="$(cat ${cfile})"

# Select command
cmd=$(\
  printf "${default_commands}${commands[@]}" \
| awk '{$1=$1};1' \
| fzf
)

printf "$ ${cmd}\n\n"

# Replace all <index> > input
while true; do
  # Check if anything left to replace
  [[ ${cmd} == *"<"*">"* ]] || break
  # Get the content of the first occurence of <this>
  index="$(echo $cmd | awk -F[\<\>] '{print $2}')"
  # Get substitution for <this>
  read -p "${index}> " subst
  test -z "${subst}" && subst="${index}"
  # Replace all occurences of <this>
  cmd="$(sed -E "s|(<${index}>)|${subst}|g" <<< ${cmd})"
done

# Run final command
#printf "${cmd}" | bash
eval "${cmd}"
