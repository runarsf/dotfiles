#!/usr/bin/env bash
set -o errexit   # abort on nonzero exitstatus
set -o nounset   # abort on unbound variable
set -o pipefail  # don't hide errors within pipes

GIT_ADD="${GIT_ADD:-.}"
GIT_DIR="${GIT_DIR:-./.git}"
WORK_TREE="${WORK_TREE:-.}"

cleanup () {
  tput cnorm
  printf "${reset}"
  exit 1
}
trap cleanup INT

reset='\e[0;39m'
blue='\e[94m'
green='\e[32m'
yellow='\e[33m'
red='\e[31m'

waiting_dots () {
  local d='0.35'
  local i='.'
  tput civis
  printf "\r${green}${i}${i}${i}"
  sleep "${d}"
  printf "\r${yellow}${i}${i} "
  printf "\r${i}${i}"
  sleep "${d}"
  printf "\r${red}${i} "
  printf "\r${i}"
  sleep "${d}"
  printf "\r${reset} "
  printf "\r"
  sleep "${d}"
  tput cnorm
}

printf "\n${blue}| ADDING \e[0;39m\n\n"
printf "\$ ${yellow}git --git-dir=${GIT_DIR} --work-tree=${WORK_TREE} ${red}add ${GIT_ADD}${reset}\n"
waiting_dots
git --git-dir="${GIT_DIR}" --work-tree="${WORK_TREE}" add "${GIT_ADD}"

printf "\n${blue}| COMMITTING \e[0;39m'${*}'\n\n"
printf "\$ ${yellow}git --git-dir=${GIT_DIR} --work-tree=${WORK_TREE} ${red}commit -m ${*}${reset}\n"
waiting_dots
git --git-dir="${GIT_DIR}" --work-tree="${WORK_TREE}" commit -m "${*}"

printf "\n${blue}| PULLING \e[0;39m\n\n"
printf "\$ ${yellow}git --git-dir=${GIT_DIR} --work-tree=${WORK_TREE} ${red}pull${reset}\n"
waiting_dots
git --git-dir="${GIT_DIR}" --work-tree="${WORK_TREE}" pull

printf "\n${blue}| PUSHING \e[0;39m\n\n"
printf "\$ ${yellow}git --git-dir=${GIT_DIR} --work-tree=${WORK_TREE} ${red}push${reset}\n"
waiting_dots
git --git-dir="${GIT_DIR}" --work-tree="${WORK_TREE}" push

printf "\n${green}| DONE! \e[0;39m\n\n"
