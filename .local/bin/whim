#!/usr/bin/env bash
# vim: set foldmethod=marker nomodeline:
# Options {{{
set -o errexit   # abort on nonzero exit status
set -o nounset   # abort on unbound variable
set -o pipefail  # don't hide errors within pipes
set -o noclobber # disallow redirect overwriting
# }}}

dependencies=("xclip") # {{{
missingDependencies=''
for cmd in "${dependencies[@]}"; do
  if ! command -v "${cmd}" >/dev/null 2>&1; then
    printf "Command ${cmd} not found.\n"
    notify-send "Whim" "Command ${cmd} not found."
    missingDependencies='true'
  fi
done
test -n "${missingDependencies}" && exit 1
# }}}

# Colours {{{
reset=$'\e[0;39m'
#red='\e[31m'
#green='\e[32m'
#blue='\e[94m'
#yellow='\e[33m'

gray=$'\e[90m'
red=$'\e[91m'
green=$'\e[92m'
yellow=$'\e[93m'
blue=$'\e[94m'
magenta=$'\e[95m'
cyan=$'\e[96m'

bGray=$'\e[100m'
bRed=$'\e[101m'
bGreen=$'\e[102m'
bYellow=$'\e[103m'
bBlue=$'\e[104m'
bMagenta=$'\e[105m'
bCyan=$'\e[106m'
# }}}

usage () { # {{{
	cat <<-EOMAN
	${green}Usage:${reset} ${blue}whim${reset} ${gray}[${red}options${gray}]${reset}

	${green}Options:${reset}
	  -h${gray},${reset} --help          Display this message.
	  -t${gray},${reset} --terminal      Custom terminal. Default: \$TERMINAL.
	  -e${gray},${reset} --editor        Custom editor. Default: \$EDITOR.
	  -g${gray},${reset} --gui           Open app directly, same as setting terminal to none.

	${green}Commands:${reset}
	  Commit message      Commit message used with git, default: \`date +'%a-%Y-%m-%dT%T%z'\`.

	${green}Examples:${yellow}
	  dirtygit
	${reset}
	EOMAN
} # }}}

# Arguments {{{
terminal="${TERMINAL} -e" editor="${EDITOR}"
positional=()
while test "${#}" -gt "0"; do
  case "${1}" in
    -h|--help)
      usage
      exit 0
      shift;;
    -e|--editor)
      editor="${2}"
      shift;shift;;
    -t|--terminal)
      terminal="${2}"
      shift;shift;;
    -g|--gui)
      terminal=''
      shift;;
    --*)
      printf "Unknown option: ${1}\n"
      exit 1
      shift;;
    -*)
      shopts="${1}"
      if test "${#shopts}" -le "2"; then
        printf "Unknown option: ${shopts}\n"
        exit 2
      fi
      shift
      set -- "${shopts:0:2}" "-${shopts:2}" "${@}"
      ;;
    *)
      positional+=("${1}")
      shift;;
  esac
done

set -- "${positional[@]}"

if test "${#}" -gt "0"; then
  for opt in "${@}"; do
    printf "Unknown option: ${opt}\n"
  done
fi
# }}}

# Create file and open {{{
mkdir -p /tmp/whim
tmpfile=$(mktemp -p /tmp/whim)

if test -z "${terminal}"; then
  eval "${editor} ${tmpfile}"
else
  eval "${terminal} ${editor} ${tmpfile}"
fi

cat "${tmpfile}" | xclip -selection clipboard
# }}}
