#!/usr/bin/env bash

# This is an example of an argument parsing function in bash.
# It has support for short (-a), long (--A), and repeating short (-aa) options.
# To see this in use, see: https://github.com/runarsf/dotfiles/blob/master/.local/bin/dirtygit

positional=()
while test "${#}" -gt "0"; do
  case "${1}" in
    -a|--A|-b|--B)
      printf "Matched option: ${1}.\n"
      shift;;
    -c|--C)
      printf "Matched option: ${1}, with argument: ${2}\n"
      shift;shift;;
    --*)
      printf "Unknown option: ${1}\n"
      exit 1
      shift;;
    -*)
      shopts="${1}"
      if test "${#shopts}" -le "2"; then
        printf "Unknown option: ${shopts}\n"
        exit 2
      fi
      shift
      set -- "${shopts:0:2}" "-${shopts:2}" "${@}"
      ;;
    *)
      positional+=("${1}")
      shift;;
  esac
done

set -- "${positional[@]}"

if test "${#}" -gt "0"; then
  printf "Leftover options: ${*}\n"
else
  printf "No leftover options after parsing.\n"
fi
