#!/usr/bin/env bash
set -o errexit

mktmp () {
  tmpfile="$(mktemp /tmp/XXXXX.png)"
}

selection () {
  mktmp
  # Selection: scrot --select "${tmpfile}"
  # Entire screen: import -window root "${tmpfile}"
  # Active window: scrot --focused "${tmpfile}"
  printf "${tmpfile}" | xclip -selection clipboard
  curl -T "${tmpfile}" https://img.runarsf.dev/upload \
    | xclip -selection clipboard
}

select () {
  selection=$(printf "Selection\nActive Monitor\nAll Screens\nActive Window" | rofi -i -dmenu "${@}")

  case "${selection}" in
    Selection) selection;;
    *) exit;;
  esac
}

capture_mode="selection"
positional=()
while test "${#}" -gt "0"; do
  case "${1}" in
    -m|--monitor) # {{{
      capture_mode="monitor"
      shift;; # }}}
    -w|--window) # {{{
      capture_mode="window"
      shift;; # }}}
    -s|--selection) # {{{
      capture_mode="selection"
      shift;shift;; # }}}
    --*) # {{{
      printf "Unknown option: ${1}\n"
      exit 1
      shift;;
    -*)
      shopts="${1}"
      if test "${#shopts}" -le "2"; then
        printf "Unknown option: ${shopts}\n"
        exit 2
      fi
      shift
      set -- "${shopts:0:2}" "-${shopts:2}" "${@}"
      ;;
    *)
      positional+=("${1}")
      shift;; # }}}
  esac
done

set -- "${positional[@]}"

select
screenshot "${capture_mode}"

# Either parse as unknown or command arguments
#if test "${#}" -lt "1"; then
  #printf "No command supplied, exiting.\n"
  # should run selection mode
#fi
